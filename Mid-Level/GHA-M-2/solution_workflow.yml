# /Mid-Level/GHA-M-2/solution_workflow.yml
# GHA-M-2: Terraform Plan/Apply Workflow with Terraform Cloud 
# Verification:
# - On a pull request/PR to main > `terraform plan` 
# - On merge to main > executes `terraform apply -auto-approve`
# - State is managed in Terraform Cloud backend

name: GHA-M-2 --- Terraform Plan + Apply with Terraform Cloud 

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "Mid-Level/GHA-M-2/**"
      - ".github/workflows/gha-m-2.yml"
  push:
    branches: [ "main" ]
    paths:
      - "Mid-Level/GHA-M-2/**"
      - ".github/workflows/gha-m-2.yml"

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_CLOUD_ORGANIZATION: "db-solutions-org"        # TFC org
      TF_WORKSPACE: "gha-m-2-workspace"                # TFC workspace
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}        # set in GitHub repo secrets
      TF_IN_AUTOMATION: "true"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: Mid-Level/GHA-M-2
        run: terraform init

      - name: Terraform Validate
        working-directory: Mid-Level/GHA-M-2
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: Mid-Level/GHA-M-2
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: Mid-Level/GHA-M-2
        run: terraform apply -auto-approve -input=false

